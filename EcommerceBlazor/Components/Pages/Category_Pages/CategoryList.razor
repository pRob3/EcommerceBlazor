@page "/category"
@inject ICategoryRepository _categoryRepository
@inject IJSRuntime _jsRuntime
@attribute [Authorize(Roles = "Admin")]

<BoostrapModal OnModalConfirmation="ConfirmDeleteClick"
               ButtonBootstrapStyle="btn-danger"
               ButtonText="Delete"
               Title="Are you sure you want to delete this category?"></BoostrapModal>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h1 class="text-white py-2">Category List</h1>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square"></i> Add new category
                    </a>
                </div>
            </div>
            @if (Categories.Any())
            {

                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Categories)
                        {
                            <tr>
                                <td>@category.Name</td>
                                <td>
                                    <a href="@($"category/update/{category.Id}")" class="btn btn-sm btn-primary">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <button class="btn btn-sm btn-danger a" @onclick="()=> HandleDelete(category.Id)">
                                        <i class="bi bi-trash3"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            }
            else
            {
                <div class="alert alert-warning" role="alert">
                    No categories found.
                </div>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private int _deleteCategoryId { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();

            IsProcessing = false;
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadCategories()
    {
        Categories = await _categoryRepository.GetAllAsync();
    }

    private void HandleDelete(int id)
    {
        _deleteCategoryId = id;
        _jsRuntime.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDeleteClick(bool isConfirmed)
    {
        IsProcessing = true;
        await _jsRuntime.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && _deleteCategoryId != 0)
        {
            var result = await _categoryRepository.DeleteAsync(_deleteCategoryId);

            if (result)
            {
                _jsRuntime?.ToastrSuccess("Category deleted successfully!");

            }
            else
            {
                _jsRuntime?.ToastrError("Error while deleting!");
            }

            await LoadCategories();
        }

        _deleteCategoryId = 0;
        IsProcessing = false;
    }
}
